{"version":3,"names":[],"mappings":"","sources":["search.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar toggledFilter = false;\nvar searchParameters;\nvar filterToggleArrow = $(\"#filterToggleArrow\");\nvar spinner = '<div class=\"jobDescLoader\"><div class=\"spinner-container container1\"><div class=\"circle1\"></div><div class=\"circle2\"></div><div class=\"circle3\"></div><div class=\"circle4\"></div></div><div class=\"spinner-container container2\"><div class=\"circle1\"></div><div class=\"circle2\"></div><div class=\"circle3\"></div><div class=\"circle4\"></div></div><div class=\"spinner-container container3\"><div class=\"circle1\"></div><div class=\"circle2\"></div><div class=\"circle3\"></div><div class=\"circle4\"></div></div></div>';\n\nvar toggleFilters = function toggleFilters() {\n\n    if (!toggledFilter) {\n        $(\".searchFilter\").removeClass(\"searchFilterAnimation\").hide();\n        //setTimeout(function(){\n        //    $(\".searchFilter\").hide(300);\n        //}, 300);\n        $(\".filters\").removeClass(\"filtersAnimation\");\n        filterToggleArrow.removeClass(\"glyphicon-chevron-up\");\n        filterToggleArrow.addClass(\"glyphicon-chevron-down\");\n        $(\"#resetFilters\").hide(300);\n        toggledFilter = true;\n    } else {\n        $(\".searchFilter\").show().addClass(\"searchFilterAnimation\");\n        $(\".filters\").addClass(\"filtersAnimation\");\n        filterToggleArrow.removeClass(\"glyphicon-chevron-down\");\n        filterToggleArrow.addClass(\"glyphicon-chevron-up\");\n        $(\"#resetFilters\").show(300);\n        toggledFilter = false;\n    }\n};\n\nvar resetFilters = function resetFilters() {\n    $(\".defaultOption\").attr('selected', 'selected');\n    searchParameters = {};\n};\n\nvar setSearchParameters = function setSearchParameters() {\n    searchParameters = {\n        q: $('#keyword').val(),\n        yrkesomrade: $('#workArea').val(),\n        lan: $('#county').val(),\n        sida: 1\n    };\n};\n\n$('#searchForm').submit(setSearchParameters());\n//$('.enabled')\n\nvar paginate = function paginate(page) {\n    if (typeof page == 'number' && searchParameters['sida'] + page > 0) {\n        searchParameters['sida'] += page;\n        getNewJobData();\n    } else if (typeof page == 'string') {\n        if (page === 'first' && searchParameters['sida'] != 1) {\n            searchParameters['sida'] = 1;\n            getNewJobData();\n        } else if (page === 'last' && searchParameters['sida'] != Math.ceil($('#numberOfJobMatches').html() / 10)) {\n            searchParameters['sida'] = Math.ceil($('#numberOfJobMatches').html() / 10);\n            getNewJobData();\n        }\n    }\n};\n\nvar enableOrDisablePaginateButtons = function enableOrDisablePaginateButtons() {\n    var prevButtons = $('.prevButton');\n    var nextButtons = $('.nextButton');\n    if (getCurrentPage() === 1) {\n        prevButtons.attr({ disabled: 'disabled' });\n        nextButtons.removeAttr('disabled');\n    } else if (getCurrentPage() === Math.ceil($('#numberOfJobMatches').html() / 10)) {\n        nextButtons.attr({ disabled: 'disabled' });\n        prevButtons.removeAttr('disabled');\n    } else {\n        prevButtons.removeAttr('disabled');\n        nextButtons.removeAttr('disabled');\n    }\n};\n\nvar getCurrentPage = function getCurrentPage() {\n    return searchParameters['page'];\n};\n\nvar getNewJobData = function getNewJobData() {\n    enableOrDisablePaginateButtons();\n    setCurrentPage();\n    $.ajax({\n        url: '/search',\n        type: 'get',\n        data: searchParameters,\n        success: function success(data) {\n            data = JSON.parse(data);\n            updateSearchResults(data);\n        }\n    });\n};\n\nvar updateSearchResults = function updateSearchResults(data) {\n    $('.jobBlock').remove();\n    console.log(data);\n    for (var i = 0; i < data.matchningdata.length; i++) {\n        createNewJobPuff(data.matchningdata[i]);\n    }\n    getJobDescriptions();\n};\n\nvar setCurrentPage = function setCurrentPage() {\n    $('.viewingPageNumber').text('Sida ' + searchParameters['sida']);\n};\n\nvar daysSincePublished = function daysSincePublished(publishedDate) {\n    var today = new Date();\n    var d = new Date(publishedDate);\n    var dateDiffInDays = Math.floor((today - d) / (1000 * 60 * 60 * 24));\n    if (dateDiffInDays < 1) {\n        return 'Idag';\n    } else if (dateDiffInDays === 1) {\n        return 'Igår';\n    } else {\n        return dateDiffInDays + \" dagar sedan\";\n    }\n};\n\nvar createNewJobPuff = function createNewJobPuff(data) {\n    $('.searchResults').html($('.searchResults').html() + '<div class=\"jobBlock col-md-6\" id=\"' + data.annonsid + '\">' + '<div class=\"upperInfo\">' + '<a href=\"/job/' + data.annonsid + '\">' + '<div class=\"titles\">' + '<h1 class=\"text-left\">' + data.annonsrubrik + '</h1>' + '<h2 class=\"text-right\"><i>' + data.arbetsplatsnamn + '</i></h2>' + '</div>' + '</a>' + '<div class=\"jobShortDescription\"></div>' + '</div>' + '<div class=\"bottomInfo\">' + '<div class=\"col-md-4\" title=\"Kommunen där jobbet finns.\">' + '<img src=\"img/map_pin.png\"/>' + '<span> ' + data.kommunnamn + ' </span>' + '</div>' + '<div class=\"col-md-4\" title=\"Dagar sedan jobbet publicerades.\">' + '<img src=\"img/time_ago.png\"/>' + '<span>' + daysSincePublished(data.publiceraddatum) + '</span>' + '</div>' + '<div class=\"col-md-4\" title=\"Sista ansökningsdatum för jobbet.\">' + '<img src=\"img/calendar.png\"/>' + '<span>' + data.publiceraddatum.substr(0, 10) + '</span>' + '</div>' + '</div>' + '</div>');\n};\n\nvar getJobDescriptions = function getJobDescriptions() {\n    var jobs = $('div.jobBlock');\n    for (var i = 0; i < jobs.length; i++) {\n        if (jobs[i].hasAttribute('id')) {\n            (function (i) {\n                $('#' + jobs[i].getAttribute('id')).find('.jobShortDescription').html(spinner);\n                $.ajax({\n                    url: 'getJobInfo/' + jobs[i].getAttribute('id'),\n                    type: \"get\",\n                    success: function success(data) {\n                        var shortDescription;\n                        if (data.length > 200) {\n                            shortDescription = data.substring(0, 200) + \" ...\";\n                        } else {\n                            shortDescription = data;\n                        }\n                        $('#' + jobs[i].getAttribute('id')).find('.jobShortDescription').html(shortDescription);\n                    }\n                });\n            })(i);\n        }\n    }\n};\n\n$(document).ready(function () {\n    $.ajaxSetup({\n        headers: { 'X-CSRF-Token': $('meta[name=_token]').attr('content') }\n    });\n    getJobDescriptions();\n    //enableOrDisablePaginateButtons();\n\n    // confirm box when creating new job\n    var toggled = false;\n    var panel = $('#confirmBox');\n    $('#openConfirmForm').click(function () {\n        $(this).html('Stäng');\n        $('.confirmationForm form').toggle(300);\n        if (!toggled) {\n            panel.css('width', '100%');\n        } else {\n            panel.css('width', '50%');\n        }\n        toggled = !toggled;\n    });\n\n    toggleFilters();\n\n    $('.filterButton.searchPage').on('click', toggleFilters);\n    $('#resetFilters').on('click', resetFilters);\n\n    $('.summernote').summernote({\n        lang: 'sv-SE', // default: 'en-US'\n        height: 300, // set editor height\n        minHeight: null, // set minimum height of editor\n        disableDragAndDrop: true,\n        placeholder: 'Här beskriver du jobbets uppgifter, vad som förväntas av den jobbsökande, och kanske en kort företagsbeskrivning.',\n        fontNames: ['Arial', 'Arial Black', 'Courier New', 'Helvetiva', 'Impact', 'Roboto', 'Tahoma', 'Times New Roman', 'Verdana'],\n        fontNamesIgnoreCheck: ['Roboto'],\n        toolbar: [\n        // [groupName, [list of button]]\n        ['style', ['bold', 'italic', 'underline', 'clear']], ['fontsize', ['fontsize']], ['fontname', ['fontname']], ['para', ['ul', 'ol', 'paragraph']], ['insert', ['link']], ['misc', ['undo', 'redo']]]\n    });\n\n    $('.modal').on('show.bs.modal', function () {\n        var scrollTop = $(window).scrollTop();\n        $(this).css({ 'top': scrollTop + 50 + 'px' });\n    });\n});\n\n},{}]},{},[1]);\n"],"file":"search.js","sourceRoot":"/source/"}